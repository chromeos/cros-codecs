// This file is generated by cargo_embargo.
// Do not modify this file after the first "rust_*" or "genrule" module
// because the changes will be overridden on upgrade.
// Content before the first "rust_*" or "genrule" module is preserved.

// DO NOT SUBMIT: Add license before submitting.
rust_test {
    name: "cros-codecs_test_src_lib",
    host_supported: true,
    crate_name: "cros_codecs",
    cargo_env_compat: true,
    cargo_pkg_version: "0.0.4",
    crate_root: "src/lib.rs",
    test_suites: ["general-tests"],
    auto_gen_config: true,
    test_options: {
        unit_test: true,
    },
    edition: "2021",
    features: [
        "default",
        "libva",
        "vaapi",
    ],
    rustlibs: [
        "libanyhow",
        "libargh",
        "libbitreader",
        "libbyteorder",
        "libbytes",
        "libcrc32fast",
        "libcros_libva",
        "libdrm",
        "libenv_logger",
        "libgbm",
        "liblog_rust",
        "libmatroska_demuxer",
        "libmd5",
        "libnix",
        "libthiserror",
    ],
    proc_macros: ["libenumn"],
    aliases: ["cros_libva:libva"],
}

rust_library {
    name: "libcros_codecs",
    host_supported: true,
    crate_name: "cros_codecs",
    cargo_env_compat: true,
    cargo_pkg_version: "0.0.4",
    crate_root: "src/lib.rs",
    edition: "2021",
    features: [
        "default",
        "libva",
        "vaapi",
    ],
    rustlibs: [
        "libanyhow",
        "libbitreader",
        "libbyteorder",
        "libbytes",
        "libcrc32fast",
        "libcros_libva",
        "liblog_rust",
        "libnix",
        "libthiserror",
    ],
    proc_macros: ["libenumn"],
    aliases: ["cros_libva:libva"],
    apex_available: [
        "//apex_available:platform",
        "//apex_available:anyapex",
    ],
}
