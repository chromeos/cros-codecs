// This file is generated by cargo_embargo.
// Do not modify this file because the changes will be overridden on upgrade.

package {
    default_applicable_licenses: ["external_rust_crates_cros-codecs_license"],
    default_team: "trendy_team_android_rust",
}

license {
    name: "external_rust_crates_cros-codecs_license",
    visibility: [":__subpackages__"],
    license_kinds: ["SPDX-license-identifier-BSD-3-Clause"],
    license_text: ["LICENSE"],
}

rust_test {
    name: "cros-codecs_test_src_lib",
    crate_name: "cros_codecs",
    cargo_env_compat: true,
    cargo_pkg_version: "0.0.5",
    crate_root: "src/lib.rs",
    test_suites: ["general-tests"],
    auto_gen_config: true,
    edition: "2021",
    features: ["default"],
    rustlibs: [
        "libargh",
        "libdrm",
        "libenv_logger",
        "libgbm",
        "liblog_rust",
        // "libmatroska_demuxer",
        "libserde_json",
    ],
}

rust_library {
    name: "libcros_codecs",
    crate_name: "cros_codecs",
    cargo_env_compat: true,
    cargo_pkg_version: "0.0.5",
    crate_root: "src/lib.rs",
    edition: "2021",
    rustlibs: ["liblog_rust"],
    apex_available: [
        "//apex_available:platform",
        "//apex_available:anyapex",
    ],
    lints: "none",

    product_available: true,
    vendor_available: true,

    aliases: ["cros_libva:libva"],

    arch: {
        x86_64: {
            features: ["vaapi"],
            rustlibs: [
                "libanyhow",
                "libbyteorder",
                "libthiserror",
                "libcrc32fast",
                "libnix",
                "libcros_libva",
            ],
        },
        arm64: {
            rustlibs: [
                "libanyhow",
                "libbyteorder",
                "libthiserror",
                "libcrc32fast",
                "libnix",
                "libv4l2r",
            ],
            features: ["v4l2"],
        },
    },
}

